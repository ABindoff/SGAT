\documentclass[a4paper]{article}
\usepackage{a4wide}
\usepackage[authoryear]{natbib}
\usepackage{amsmath}

\SweaveOpts{engine=R, eps=FALSE, keep.source = FALSE}
%\VignetteIndexEntry{Identifying Residency}
%\VignetteDepends{SGAT}
%\VignettePackage{SGAT}
%\VignetteKeyword{Geolocation}
\begin{document}


\title{Threshold Movement}
\date{2013}
\author{\textbf{Simeon Lisovski} \\
%EndAName
Centre for Integrative Ecology\\
Deakin University\\
\and \textbf{Michael Sumner} \\
%EndAName
Australian Antarctic Division\\
\and \textbf{Simon Wotherspoon} \\
%EndAName
Australian Antarctic Division,\\
Institute for Marine and Antarctic Studies\\
University of Tasmania}
\maketitle

\begin{abstract}
  The \textbf{SGAT} package provides facilities for Geolocation
  estimation.  This document examines the ability of the Estelle and
  Stella models to distinguish periods of residency and migration.
\end{abstract}


<<echo=FALSE>>=
set.seed(32)
@


\section{Introduction}
\label{sec:introduction}

There is simply not enough information in a single time of twilight
from which to determine the location of the tag. Any threshold based
Geolocation method derives location estimates by either assuming the
tag is stationary between twilights, or by assuming the tag has moved
but restricting the range of the motion.  The Stella and Estelle
models fall into this second category, and this raises questions as to
the degree to which these models can actually detect when a tag is
stationary.

To investigate this issue, we simulate data from a tag that is
intermittently stationary to test the ability of Estelle distinguish
periods of residency from periods of large scale migration.

\section{Low Frequency Intermittent Motion}
\label{sec:low-freq}

This example examines low frequency intermittent motion, in which the
tagged individual alternates between $30$ day periods of residency and
$30$ day periods of mobility.

\subsection{Simulated Path}
\label{sec:LFsimulated}


The true path of the individual is represented by bezier curves from
\texttt{p0} to \texttt{p1} to \texttt{p2}, with control points
\texttt{c0}, \texttt{c1}, \texttt{c2}, and \texttt{c3}.
<<>>=
## Construct a single bezier spline from (t1,p1) to (t2,p2) with
## control points c1 and c2.
bezier <- function(t1,p1,c1,t2,p2,c2) {
  function(t) {
    t <- (unclass(t)-unclass(t1))/(unclass(t2)-unclass(t1))
    outer((1-t)^3,p1)+
      outer(3*(1-t)^2*t,c1)+
        outer(3*(1-t)*t^2,c2)+
          outer(t^3,p2)
  }
}
## Endpoints
p0 <- c(130,-30)
p1 <- c(140,-50)
p2 <- c(130,-40)
## Control points
c0 <- p0+c(6,-4)
c1 <- p1+c(-4,8)
c2 <- p1+c(-6,2)
c3 <- p2+c(2,-8)
f1 <- bezier(30,p0,c0,60,p1,c1)
f2 <- bezier(90,p1,c2,120,p2,c3)
days <- c(1:30,31:60,61:90,91:120,121:150)
ps <- rbind(cbind(rep(p0[1],30),rep(p0[2],30)),
            f1(31:60),
            cbind(rep(p1[1],30),rep(p1[2],30)),
            f2(91:120),
            cbind(rep(p2[1],30),rep(p2[2],30)))
@
This coarse track is resampled to two minute intervals, and the
solar zenith angle at each point is calculated
<<>>=
library(SGAT)
## Resample to two minute intervals and compute zenith angles
tms <- as.POSIXct("2013-04-01","GMT")+(24*60*60)*days
tms.out <- seq(min(tms),max(tms),by=2*60)
d <- zenith.simulate(tms,ps[,1],ps[,2],tms.out)
@
To focus on the inherent lack of identifiability in the model
associated with motion, these dates have been selected to avoid
equinoxal effects.  From these zenith angles, the precise times and
locations at which the tagged individual would observe twilight are
calculated.
<<>>=
## Compute times and locations at which twilight is observed.
twl <- twilight.simulate(d)
twl <- twilight.perturb(twl,rlnorm(nrow(twl),0.3,0.6))
@


\subsection{Estelle}
\label{sec:LFestelle}

A set of initial $x$ locations are estimated
<<>>=
## Initial x locations
x0 <- threshold.path(twl$twilight,twl$rise)$x
## Initial z locations
z0 <- trackMidpts(x0)
@
and adjusted to meet the requirements of the Log Normal model
<<>>=
## Construct model and use residuals to adjust x0
model <- threshold.model(twl$twilight,twl$rise,
                         twilight.model="LogNormal",
                         alpha=c(0.3,0.6),beta=c(8,3.5),
                         x0=x0,z0=z0)
r <- model$residuals(x0)
x0 <- cbind(x0[,1]-ifelse(twl$rise,1,-1)*pmin(0,r-0.1)/1440*360,x0[,2])
z0 <- trackMidpts(x0)
model <- threshold.model(twl$twilight,twl$rise,
                         twilight.model="LogNormal",
                         alpha=c(0.3,0.6),beta=c(8,3.5),
                         x0=x0,z0=z0)
@


Proposal distributions are defined
<<>>=
## Define initial proposals
x.proposal <- mvnorm(S=diag(c(0.002,0.002)),n=nrow(twl))
z.proposal <- mvnorm(S=diag(c(0.002,0.002)),n=nrow(twl)-1)
@
and a short sequence of samples is drawn and examined for problems.
<<>>=
## Short test run
fit <- estelle.metropolis(model,x.proposal,z.proposal,iters=300,thin=20)
@
The proposal distributions are ``tuned'' to the posterior
<<>>=
## Tune proposals based on previous run
x.proposal <- mvnorm(chain.cov(fit$x,discard=100),s=0.3)
z.proposal <- mvnorm(chain.cov(fit$z,discard=100),s=0.3)
fit <- estelle.metropolis(model,x.proposal,z.proposal,
                          x0=chain.last(fit$x),z0=chain.last(fit$z),
                          iters=300,thin=20)
## Tune proposals based on previous run
x.proposal <- mvnorm(chain.cov(fit$x),s=0.3)
z.proposal <- mvnorm(chain.cov(fit$z),s=0.3)
fit <- estelle.metropolis(model,x.proposal,z.proposal,
                          x0=chain.last(fit$x),z0=chain.last(fit$z),
                          iters=300,thin=20)
@
and the sampled locations are examined to determine if the chains
are mixing adequately (Figure~\ref{fig:LFtrace1}).
<<label=LFtrace1,eval=F>>=
opar <- par(mfrow=c(2,1),mar=c(3,5,2,1)+0.1)
matplot(scale(t(fit$x[150,,]),scale=F),type="l",lty=1,col=c(2,4),
        xlab="",ylab=expression(x[150]))
matplot(scale(t(fit$z[150,,]),scale=F),type="l",lty=1,col=c(2,4),
        xlab="",ylab=expression(z[150]))
par(opar)
@
\begin{figure}[ht]
  \centering
<<fig=T,echo=F>>=
<<LFtrace1>>
@
  \caption{Example traces that show the mixing of the chain after
    tuning the proposal distributions.}
  \label{fig:LFtrace1}
\end{figure}


<<>>=
## Draw final sample
x.proposal <- mvnorm(chain.cov(fit$x),s=0.3)
z.proposal <- mvnorm(chain.cov(fit$z),s=0.3)
fit <- estelle.metropolis(model,x.proposal,z.proposal,
                          x0=chain.last(fit$x),z0=chain.last(fit$z),
                          iters=2000,thin=50)
@
and the sampled locations should be examined to ensure the
chains are mixing adequately.

When a satisfactory sample is drawn, the sampled locations can then be
summarized as required.


Figure~\ref{fig:LFci} show the posterior means and credible intervals
for the sequence of estimated twilight locations, overlaid on the
true track.
<<label=LFci,eval=F>>=
## Plot time series of lat and lon
opar <- par(mfrow=c(2,1),mar=c(3,5,2,1)+0.1)
s <- location.summary(fit$x)
matplot(cbind(twl$lon,s[,c("lon.mean","lon.2.5%","lon.97.5%")]),type="l",lty=1,
        col=c("grey70","firebrick1","dodgerblue1","dodgerblue1"),ylab="Lon")
matplot(cbind(twl$lat,s[,c("lat.mean","lat.2.5%","lat.97.5%")]),type="l",lty=1,
        col=c("grey70","firebrick1","dodgerblue1","dodgerblue1"),ylab="Lat")
par(opar)
@
\begin{figure}[ht]
  \centering
<<fig=T,echo=F>>=
<<LFci>>
@
\caption{The posterior means (red) and $95\%$ credible intervals
  (blue) for the sequence estimated locations for the fit of the Log
  Normal model to the simulated dataset, overlaid on the true locations
  (grey).}
  \label{fig:LFci}
\end{figure}
Figure~\ref{fig:Mpath} shows the mean twilight locations together with
the samples for a several twilight and several intermediate locations.
<<label=LFpath,eval=F>>=
## Plot sequence of mean x's
plot(location.mean(fit$x),pch=16,cex=0.4,col="grey80",xlab="Lon",ylab="Lat")
points(t(fit$x[30,,]),pch=16,cex=0.2,col="dodgerblue1")
points(t(fit$x[80,,]),pch=16,cex=0.2,col="dodgerblue1")
points(t(fit$x[200,,]),pch=16,cex=0.2,col="dodgerblue1")
points(t(fit$z[150,,]),pch=16,cex=0.2,col="firebrick1")
points(t(fit$z[100,,]),pch=16,cex=0.2,col="firebrick1")
points(t(fit$z[220,,]),pch=16,cex=0.2,col="firebrick1")
lines(twl$lon,twl$lat,col="grey50")
@
\begin{figure}[ht]
  \centering
<<fig=T,echo=F>>=
<<LFpath>>
@
\caption{The posterior mean twilight locations (grey) calculated under
  the Log Normal model, overlaid with the samples for three
  twilight location (blue) and three intermediate locations (red),
  and the true track (line).}
  \label{fig:LFpath}
\end{figure}

These results suggest that for this example at least, periods of long
term localized residency can be distinguished from migration, but the
time of transition between migration and residency is poorly estimated
due to the large error in individual locations.


\section{High Frequency Intermittent Motion}
\label{sec:high-freq}

This example examines low frequency intermittent motion, in which the
tagged individual remains stationary for $2$ days and moves on every
third.


\subsection{Simulated Path}
\label{sec:HFsimulated}


The path of the individual is based on the same path as before, but
the locations are grouped into groups of three, and each group is
replaced with its average.
<<>>=
ps <- cbind(ave(ps[,1],rep(1:50,each=3)),ave(ps[,2],rep(1:50,each=3)))
@
Twilight times are caculated from this track as before
<<>>=
library(SGAT)
## Resample to two minute intervals and compute zenith angles
tms <- as.POSIXct("2013-04-01","GMT")+(24*60*60)*days
tms.out <- seq(min(tms),max(tms),by=2*60)
d <- zenith.simulate(tms,ps[,1],ps[,2],tms.out)
## Compute times and locations at which twilight is observed.
twl <- twilight.simulate(d)
twl <- twilight.perturb(twl,rlnorm(nrow(twl),0.3,0.6))
@

\subsection{Estelle}
\label{sec:HFestelle}

A set of initial $x$ locations are estimated
<<>>=
## Initial x locations
x0 <- threshold.path(twl$twilight,twl$rise)$x
@
and adjusted to meet the requirements of the Log Normal model
<<>>=
model <- threshold.model(twl$twilight,twl$rise,
                         twilight.model="LogNormal",
                         alpha=c(0.3,0.6),beta=c(8,3.5),
                         x0=NULL,z0=NULL)
r <- model$residuals(x0)
x0 <- cbind(x0[,1]-ifelse(twl$rise,1,-1)*pmin(0,r-0.1)/1440*360,x0[,2])
z0 <- trackMidpts(x0)
model <- threshold.model(twl$twilight,twl$rise,
                         twilight.model="LogNormal",
                         alpha=c(0.3,0.6),beta=c(8,3.5),
                         x0=x0,z0=z0)
@

Proposal distributions are defined
<<>>=
## Define initial proposals
x.proposal <- mvnorm(S=diag(c(0.002,0.002)),n=nrow(twl))
z.proposal <- mvnorm(S=diag(c(0.002,0.002)),n=nrow(twl)-1)
@
and a short sequence of samples is drawn and examined for problems.
<<>>=
## Short test run
fit <- estelle.metropolis(model,x.proposal,z.proposal,iters=300,thin=20)
@
The proposal distributions are ``tuned'' to the posterior
<<>>=
## Tune proposals based on previous run
x.proposal <- mvnorm(chain.cov(fit$x,discard=100),s=0.3)
z.proposal <- mvnorm(chain.cov(fit$z,discard=100),s=0.3)
fit <- estelle.metropolis(model,x.proposal,z.proposal,
                          x0=chain.last(fit$x),z0=chain.last(fit$z),
                          iters=300,thin=20)
## Tune proposals based on previous run
x.proposal <- mvnorm(chain.cov(fit$x),s=0.3)
z.proposal <- mvnorm(chain.cov(fit$z),s=0.3)
fit <- estelle.metropolis(model,x.proposal,z.proposal,
                          x0=chain.last(fit$x),z0=chain.last(fit$z),
                          iters=300,thin=20)
@
and the sampled locations are examined to determine if the chains
are mixing adequately (Figure~\ref{fig:HFtrace1}).
<<label=HFtrace1,eval=F>>=
opar <- par(mfrow=c(2,1),mar=c(3,5,2,1)+0.1)
matplot(scale(t(fit$x[150,,]),scale=F),type="l",lty=1,col=c(2,4),
        xlab="",ylab=expression(x[150]))
matplot(scale(t(fit$z[150,,]),scale=F),type="l",lty=1,col=c(2,4),
        xlab="",ylab=expression(z[150]))
par(opar)
@
\begin{figure}[ht]
  \centering
<<fig=T,echo=F>>=
<<HFtrace1>>
@
  \caption{Example traces that show the mixing of the chain after
    tuning the proposal distributions.}
  \label{fig:HFtrace1}
\end{figure}


<<>>=
## Draw final sample
x.proposal <- mvnorm(chain.cov(fit$x),s=0.3)
z.proposal <- mvnorm(chain.cov(fit$z),s=0.3)
fit <- estelle.metropolis(model,x.proposal,z.proposal,
                          x0=chain.last(fit$x),z0=chain.last(fit$z),
                          iters=2000,thin=50)
@
and the sampled locations should be examined to ensure the
chains are mixing adequately.

When a satisfactory sample is drawn, the sampled locations can then be
summarized as required.


Figure~\ref{fig:HFci} show the posterior means and credible intervals
for the sequence of estimated twilight locations, overlaid on the
true track.
<<label=HFci,eval=F>>=
## Plot time series of lat and lon
opar <- par(mfrow=c(2,1),mar=c(3,5,2,1)+0.1)
s <- location.summary(fit$x)
matplot(cbind(twl$lon,s[,c("lon.mean","lon.2.5%","lon.97.5%")]),type="l",lty=1,
        col=c("grey70","firebrick1","dodgerblue1","dodgerblue1"),ylab="Lon")
matplot(cbind(twl$lat,s[,c("lat.mean","lat.2.5%","lat.97.5%")]),type="l",lty=1,
        col=c("grey70","firebrick1","dodgerblue1","dodgerblue1"),ylab="Lat")
par(opar)
@
\begin{figure}[ht]
  \centering
<<fig=T,echo=F>>=
<<HFci>>
@
\caption{The posterior means (red) and $95\%$ credible intervals
  (blue) for the sequence estimated locations for the fit of the Log
  Normal model to the simulated dataset, overlaid on the true locations
  (grey).}
  \label{fig:HFci}
\end{figure}
Figure~\ref{fig:Mpath} shows the mean twilight locations together with
the samples for a several twilight and several intermediate locations.
<<label=HFpath,eval=F>>=
## Plot sequence of mean x's
plot(location.mean(fit$x),pch=16,cex=0.4,col="grey80",xlab="Lon",ylab="Lat")
points(t(fit$x[30,,]),pch=16,cex=0.2,col="dodgerblue1")
points(t(fit$x[80,,]),pch=16,cex=0.2,col="dodgerblue1")
points(t(fit$x[200,,]),pch=16,cex=0.2,col="dodgerblue1")
points(t(fit$z[150,,]),pch=16,cex=0.2,col="firebrick1")
points(t(fit$z[100,,]),pch=16,cex=0.2,col="firebrick1")
points(t(fit$z[220,,]),pch=16,cex=0.2,col="firebrick1")
lines(twl$lon,twl$lat,col="grey50")
@
\begin{figure}[ht]
  \centering
<<fig=T,echo=F>>=
<<HFpath>>
@
\caption{The posterior mean twilight locations (grey) calculated under
  the Log Normal model, overlaid with the samples for three
  twilight location (blue) and three intermediate locations (red),
  and the true track (line).}
  \label{fig:HFpath}
\end{figure}

It is clear from Figure~\ref{fig:HFci} that while it is possible to
distinguish long term, localized residence from migration, short term
residency cannot be resolved as a consequence of the large errors in
individual locations.

\clearpage
\nocite{Sumner2009}
\nocite{Lisovski2012}
\bibliographystyle{apalike}
\bibliography{SGAT}


\end{document}
